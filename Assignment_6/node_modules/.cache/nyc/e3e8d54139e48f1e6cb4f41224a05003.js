var cov_2cl1ee0d6r=function(){var path="C:\\Users\\Dinesh Krishna\\Desktop\\sem7\\placements\\rently\\session on node.js\\assignment_6\\routes\\armstrong.js",hash="ab35be318aaaf11d0bdde8f445f8683ae4ff8d79",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"C:\\Users\\Dinesh Krishna\\Desktop\\sem7\\placements\\rently\\session on node.js\\assignment_6\\routes\\armstrong.js",statementMap:{"0":{start:{line:2,column:10},end:{line:2,column:13}},"1":{start:{line:2,column:18},end:{line:2,column:19}},"2":{start:{line:3,column:4},end:{line:3,column:12}},"3":{start:{line:5,column:4},end:{line:8,column:5}},"4":{start:{line:6,column:8},end:{line:6,column:25}},"5":{start:{line:7,column:8},end:{line:7,column:16}},"6":{start:{line:9,column:4},end:{line:9,column:10}},"7":{start:{line:11,column:4},end:{line:19,column:5}},"8":{start:{line:12,column:16},end:{line:12,column:20}},"9":{start:{line:14,column:8},end:{line:14,column:33}},"10":{start:{line:15,column:8},end:{line:15,column:25}},"11":{start:{line:21,column:4},end:{line:26,column:5}},"12":{start:{line:22,column:8},end:{line:22,column:23}},"13":{start:{line:25,column:8},end:{line:25,column:24}},"14":{start:{line:30,column:4},end:{line:32,column:6}}},fnMap:{"0":{name:"isArmstrong",decl:{start:{line:1,column:9},end:{line:1,column:20}},loc:{start:{line:1,column:34},end:{line:27,column:5}},line:1}},branchMap:{"0":{loc:{start:{line:21,column:4},end:{line:26,column:5}},type:"if",locations:[{start:{line:21,column:4},end:{line:26,column:5}},{start:{line:21,column:4},end:{line:26,column:5}}],line:21}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();function isArmstrong(num,callback){cov_2cl1ee0d6r.f[0]++;let q=(cov_2cl1ee0d6r.s[0]++,num),sum=(cov_2cl1ee0d6r.s[1]++,0);cov_2cl1ee0d6r.s[2]++;power=0;//this loop is used to find the power to which each digit has to be raised
cov_2cl1ee0d6r.s[3]++;while(q>0){cov_2cl1ee0d6r.s[4]++;q=parseInt(q/10);cov_2cl1ee0d6r.s[5]++;power++;}cov_2cl1ee0d6r.s[6]++;q=num;//this loop separates the digits, raises its power and calculates sum
cov_2cl1ee0d6r.s[7]++;while(q>0){let rem=(cov_2cl1ee0d6r.s[8]++,q%10);cov_2cl1ee0d6r.s[9]++;sum+=Math.pow(rem,power);cov_2cl1ee0d6r.s[10]++;q=parseInt(q/10);// console.log("q",q);
// console.log("rem",rem);
}// console.log("sum",sum);
cov_2cl1ee0d6r.s[11]++;if(sum==num){cov_2cl1ee0d6r.b[0][0]++;cov_2cl1ee0d6r.s[12]++;callback(true);}else{cov_2cl1ee0d6r.b[0][1]++;cov_2cl1ee0d6r.s[13]++;callback(false);}}//exporting the function
cov_2cl1ee0d6r.s[14]++;module.exports={isArmstrong:isArmstrong};